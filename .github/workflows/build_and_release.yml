name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

# Required permissions to create GitHub releases
permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc

    - name: Install dependencies on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        # gcc is already installed by default on macOS GitHub runners
        
    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        echo "Using MSVC compiler available by default on Windows runners"
        # Or use mingw if needed
        # choco install mingw -y

    - name: Build (Unix/Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: make
        
    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        cl.exe /nologo /W4 /DPLATFORM_WIN32=1 /D_CRT_SECURE_NO_WARNINGS /Fefilinator.exe /Isrc src\*.c

    - name: Run Tests (Unix/Linux)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        chmod +x tests/run_tests.sh
        ./tests/run_tests.sh
        
    - name: Run Tests (Windows)
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        ./tests/run_tests.ps1

    - name: Rename binary for Unix systems
      if: matrix.os != 'windows-latest'
      run: |
        mv filinator filinator-${{ matrix.os }}

    - name: Rename binary for Windows
      if: matrix.os == 'windows-latest'
      run: |
        move filinator.exe filinator-${{ matrix.os }}.exe

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: filinator-*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

